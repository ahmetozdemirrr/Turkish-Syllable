name: Build and Publish Wheels

on:
  release:
    types: [published]

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [Ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Python 3.10 yerine 3.11 kullanıyoruz (cibuildwheel uyarısını çözmek için)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Clean dist directory
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            powershell -Command "if (Test-Path dist) { Remove-Item -Path dist\\* -Recurse -Force }"
          else
            rm -rf dist/*
          fi
        shell: bash
      - name: Set compile flags
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            echo "CFLAGS=/W4 /WX /wd4996 /wd4115" >> $GITHUB_ENV
          else
            echo "CFLAGS=-Wall -Wextra -Werror -fPIC" >> $GITHUB_ENV
          fi
        shell: bash
      - name: Build wheels with cibuildwheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ENVIRONMENT: >
            CFLAGS="-Wall -Wextra -Werror -fPIC"
            CFLAGS_WINDOWS="/W4 /WX /wd4996 /wd4115"
      - name: List wheelhouse contents before upload
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            dir wheelhouse
          else
            ls -la wheelhouse/
          fi
        shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/

  publish-testpypi:
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*  # Tüm işletim sistemlerinden wheel dosyalarını indir
          path: wheelhouse/
          merge-multiple: true  # Birden fazla artifact'ı birleştir
      - name: List wheelhouse contents
        run: ls -la wheelhouse/
      - name: Publish to TestPyPI
        run: |
          python -m pip install twine==6.0.1
          twine upload --repository testpypi wheelhouse/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

  publish-pypi:
    needs: publish-testpypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*  # Tüm işletim sistemlerinden wheel dosyalarını indir
          path: wheelhouse/
          merge-multiple: true  # Birden fazla artifact'ı birleştir
      - name: List wheelhouse contents
        run: ls -la wheelhouse/
      - name: Publish to PyPI
        run: |
          python -m pip install twine==6.0.1
          twine upload wheelhouse/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
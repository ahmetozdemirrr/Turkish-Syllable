name: Build and Publish Wheels

on:
  release:
    types: [published]

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [Ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build auditwheel --upgrade
      - name: Clean dist directory
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            if (Test-Path dist) { Remove-Item -Path dist\* -Recurse -Force }
          else
            rm -rf dist/*
          fi
        shell: bash
      - name: Build wheel
        run: python -m build
      - name: List dist contents before repair
        if: matrix.os == 'Ubuntu-latest'
        run: ls -la dist/
      - name: Repair wheel (Linux only)
        if: matrix.os == 'Ubuntu-latest'
        run: |
          auditwheel repair dist/turkish_syllable-*.whl --wheel-dir wheelhouse/
      - name: Move wheels to wheelhouse (Windows and macOS)
        if: matrix.os != 'Ubuntu-latest'
        shell: bash
        run: |
          mkdir -p wheelhouse
          mv dist/*.whl wheelhouse/
      - name: List wheelhouse contents before upload
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            dir wheelhouse
          else
            ls -la wheelhouse/
          fi
        shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/

  publish-testpypi:
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-Ubuntu-latest
          path: wheelhouse/
      - name: List wheelhouse contents
        run: ls -la wheelhouse/
      - name: Publish to TestPyPI
        run: |
          python -m pip install twine --upgrade
          twine upload --repository testpypi wheelhouse/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

  publish-pypi:
    needs: publish-testpypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-Ubuntu-latest
          path: wheelhouse/ubuntu/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows-latest
          path: wheelhouse/windows/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-latest
          path: wheelhouse/macos/
      - name: List wheelhouse contents
        run: ls -la wheelhouse/*/
      - name: Publish to PyPI
        run: |
          python -m pip install twine --upgrade
          twine upload wheelhouse/*/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}